services:
  reverse-proxy:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - proxy-network
    depends_on:
      - prometheus
      - service1
      - service2
      - service3

  service1:
    build: 
      context: ./examples/test-services
      dockerfile: Dockerfile.service
    expose:
      - "3001"
    environment:
      - PORT=3001
      - SERVICE_NAME=service1
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3

  service2:
    build: 
      context: ./examples/test-services
      dockerfile: Dockerfile.service
    expose:
      - "3002"
    environment:
      - PORT=3002
      - SERVICE_NAME=service2
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3

  service3:
    build: 
      context: ./examples/test-services
      dockerfile: Dockerfile.service
    expose:
      - "3003"
    environment:
      - PORT=3003
      - SERVICE_NAME=service3
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3003/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./src/config/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - proxy-network

networks:
  proxy-network:
    driver: bridge

volumes:
  prometheus_data: